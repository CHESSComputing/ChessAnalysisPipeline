config:
  root: examples/edd
  log_level: DEBUG
  interactive: false
  profile: false
  outputdir: output

pipeline:

  # Calibrate detector
  - edd.MCACeriaCalibrationProcessor:
      config:
        spec_file: examples/edd/ceria_2222-2/spec.log
        scan_number: 1
        flux_file: examples/edd/flux.dft
        # material: # May override any of these default values:
        #   material_name: CeO2
        #   sgnum: 225          
        #   lattice_parameters: 5.41153
        detectors:
          - detector_name: mca1
            max_energy_kev: 150
            tth_initial_guess: 7.5
            # num_bins: 2048 # Can be determined automatically
            # tth_max: 90.0 # Deafult value
            # hkl_tth_tol: 0.15 # Default value
            include_bin_ranges: [[736,1529]] # Can be selected interactively
            fit_hkls: [3,4,5,6,7,8,9,10,11,12,13] # Can be selected interactively
      save_figures: true
      outputdir: examples/edd/output
  - common.YAMLWriter:
      filename: ceria_calibrated.yaml
      force_overwrite: true

  # Measure diffraction volume length
  - edd.DiffractionVolumeLengthProcessor:
      config:
        # Use EITHER spec_file and scan_number OR par_file and scan_column
        spec_file: examples/edd/fe-foil-0522-1/spec.log
        scan_number: 2
        #par_file: examples/edd/set2_c1-1/id1a3-wbmapscan-set2_c1-1.par
        #scan_column: sampYcp
        detectors:
          - detector_name: mca1
            include_bin_ranges: [[670, 1218]] # Can be selected interactively
            # To calculate DVL from stdev of best-fit gaussian, you do
            # not need to include anything else. To select the scalar
            # by which stdev is scaled to get DVL, use:
            # sigma_to_dvl_factor: 3.5 # Options: 3.5 (default), 2, or 4
            # OR: to draw the DVL manually, use:
            # measurement_mode: manual
      save_figures: true
      outputdir: examples/edd/output
  - common.YAMLWriter:
      filename: dvl_measured.yaml
      force_overwrite: true

  # Get microstrain maps
  - pipeline.MultiplePipelineItem:
      items:
        - common.YAMLReader:
            filename: output/ceria_calibrated.yaml
            schema: edd.models.MCACeriaCalibrationConfig
  - edd.StrainAnalysisProcessor:
      config:
        ### Specify EITHER map_config...
        # map_config:
        #   title: set2_c1-1
        #   station: id1a3
        #   experiment_type: EDD
        #   sample:
        #     name: set2_c1-1
        #   spec_scans:
        #     - spec_file: examples/edd/set2_c1-1/spec.log
        #       scan_numbers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
        #   independent_dimensions:
        #     - label: sample_y
        #       data_type: smb_par
        #       units: mm
        #       name: sampYcp
        ### OR par_file and par_dims. May also use other_dims if each
        ### scan in par_file takes >1 frame of data.
        par_file: examples/edd/set2_c1-1/id1a3-wbmapscan-set2_c1-1.par
        par_dims:
          - label: sample_y
            units: mm
            name: sampYcp
          - label: sample_z
            units: mm
            name: rsampZ
          - label: angle
            units: degrees
            name: compangle
        flux_file: examples/edd/flux.dft
        detectors:
          - detector_name: mca1
            include_bin_ranges: [[736,1529]]
            fit_hkls: [1,2,3,4]
            background: quadratic
            peak_models: gaussian
            # tth_file: examples/edd/mca1_tth.txt
        materials:
          - material_name: steel_set
            sgnum: 229
            lattice_parameters: 2.86825 # Specify just 1, or a list of
                                        # as many as needed according to
                                        # the lattice symmetries / needs
                                        # of hexrd.material.Material.
      save_figures: true
  - common.NexusWriter:
      filename: strain_new.nxs
      force_overwrite: true
